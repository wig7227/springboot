<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="https://jakarta.ee/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             version="3.0"
             xsi:schemaLocation="https://jakarta.ee/xml/ns/persistence https://jakarta.ee/xml/ns/persistence/persistence_3_0.xsd">
	<!-- 영속성 관리 -->
	<persistence-unit name="JpaEx01" transaction-type="RESOURCE_LOCAL">
		<class>풀클래스 이름</class>

		<!-- true : 위에 <class>풀클래스 이름</class>에 넣은 클래스만 엔티티로 로딩한다. -->
		<!-- false : classpath에서 자동 탐색 -->
		<exclude-unlisted-classes>true</exclude-unlisted-classes>
		
		<properties>
			<property name="jakarta.persistence.jdbc.driver" value="oracle.jdbc.OracleDriver" />
			<property name="jakarta.persistence.jdbc.url" value="jdbc:oracle:thin:@localhost:1521/xe" />
			<property name="jakarta.persistence.jdbc.user" value="springboot" />
			<property name="jakarta.persistence.jdbc.password" value="1234" />
			
			<!-- 
				ORM의 큰 특징중 하나는 객체 매핑을 통해 자동으로 쿼리를 작성해주는것.
				DBMS의 종류가 있고 각 종류마다 쿼리가 조금씩 다르기 때문에
				이를 알릴 수 있도록 DB의 유형을 지정
			 -->
			<property name="hibernate.dialect" value="org.hibernate.dialect.Oracle12cDialect" />
			
			<!-- 옵션 -->
			<property name="show_sql" value="true" />
			<property name="format_sql" value="true" />
			<!-- <property name="id.new_generator_mappings" value="true" /> -->
			
			<!-- insert, select, update, delete, create, create-drop -->
			<property name="hibernate.hbm2ddl.auto" value="none" />
			<!-- 
				create : 애플리케이션이 시작할 때 기존 테이블 삭제하고 새로 생성 
				create-drop : create비슷하지만, 삭제는 애플리케이션이 종료될때 테이블 삭제
				update : 기존 데이터베이스 스키마를 업데이트
				validate : DB 스키마가 엔티티 매핑과 일치하는지 확인, 변경하지 않음
				none : 설정 안함
			 -->
		</properties>
	</persistence-unit>          
</persistence>             
	
